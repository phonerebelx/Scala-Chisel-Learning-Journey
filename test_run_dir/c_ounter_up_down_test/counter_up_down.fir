;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit counter_up_down : 
  module counter_up_down : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip data_in : UInt<8>, flip reload : UInt<1>, out : UInt, out2 : UInt}
    
    reg counter : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[UpDownCounter.scala 13:27]
    reg max_count : UInt<8>, clock with : (reset => (reset, UInt<8>("h06"))) @[UpDownCounter.scala 14:29]
    reg flag : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[UpDownCounter.scala 15:24]
    io.out <= UInt<1>("h00") @[UpDownCounter.scala 16:12]
    node _T = eq(counter, UInt<1>("h00")) @[UpDownCounter.scala 17:19]
    when _T : @[UpDownCounter.scala 17:27]
      io.out <= UInt<1>("h01") @[UpDownCounter.scala 18:16]
      skip @[UpDownCounter.scala 17:27]
    else : @[UpDownCounter.scala 20:37]
      node _T_1 = eq(counter, max_count) @[UpDownCounter.scala 20:23]
      when _T_1 : @[UpDownCounter.scala 20:37]
        io.out <= UInt<1>("h01") @[UpDownCounter.scala 21:16]
        skip @[UpDownCounter.scala 20:37]
    node _T_2 = sub(max_count, UInt<1>("h01")) @[UpDownCounter.scala 23:31]
    node _T_3 = tail(_T_2, 1) @[UpDownCounter.scala 23:31]
    node _T_4 = neq(counter, _T_3) @[UpDownCounter.scala 23:18]
    node _T_5 = eq(flag, UInt<1>("h00")) @[UpDownCounter.scala 23:44]
    node _T_6 = and(_T_4, _T_5) @[UpDownCounter.scala 23:36]
    when _T_6 : @[UpDownCounter.scala 23:52]
      node _counter_T = add(counter, UInt<1>("h01")) @[UpDownCounter.scala 25:28]
      node _counter_T_1 = tail(_counter_T, 1) @[UpDownCounter.scala 25:28]
      counter <= _counter_T_1 @[UpDownCounter.scala 25:17]
      skip @[UpDownCounter.scala 23:52]
    else : @[UpDownCounter.scala 28:29]
      node _T_7 = eq(flag, UInt<1>("h01")) @[UpDownCounter.scala 28:21]
      when _T_7 : @[UpDownCounter.scala 28:29]
        node _counter_T_2 = sub(counter, UInt<1>("h01")) @[UpDownCounter.scala 30:28]
        node _counter_T_3 = tail(_counter_T_2, 1) @[UpDownCounter.scala 30:28]
        counter <= _counter_T_3 @[UpDownCounter.scala 30:17]
        node _T_8 = eq(counter, UInt<1>("h00")) @[UpDownCounter.scala 31:21]
        when _T_8 : @[UpDownCounter.scala 31:28]
          counter <= UInt<1>("h00") @[UpDownCounter.scala 33:21]
          flag <= UInt<1>("h00") @[UpDownCounter.scala 35:18]
          skip @[UpDownCounter.scala 31:28]
        skip @[UpDownCounter.scala 28:29]
      else : @[UpDownCounter.scala 38:16]
        node _counter_T_4 = add(counter, UInt<1>("h01")) @[UpDownCounter.scala 39:28]
        node _counter_T_5 = tail(_counter_T_4, 1) @[UpDownCounter.scala 39:28]
        counter <= _counter_T_5 @[UpDownCounter.scala 39:17]
        flag <= UInt<1>("h01") @[UpDownCounter.scala 40:14]
        skip @[UpDownCounter.scala 38:16]
    io.out2 <= counter @[UpDownCounter.scala 43:13]
    
