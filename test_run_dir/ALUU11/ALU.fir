;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit ALU : 
  module ALU : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip extender : UInt<32>, flip opcod : UInt<7>, out : UInt<32>}
    
    io.out <= UInt<19>("h07ffff") @[And.scala 47:8]
    node _T = eq(UInt<4>("h0d"), io.opcod) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      node io_out_lo = bits(io.extender, 31, 20) @[And.scala 51:31]
      node _ex_t_T = bits(io.extender, 31, 31) @[And.scala 52:34]
      node ex_t_lo = bits(io.extender, 31, 31) @[And.scala 52:59]
      node _ex_t_T_1 = cat(UInt<19>("h07ffff"), ex_t_lo) @[Cat.scala 30:58]
      node ex_t_lo_1 = bits(io.extender, 31, 31) @[And.scala 52:85]
      node _ex_t_T_2 = cat(UInt<1>("h00"), ex_t_lo_1) @[Cat.scala 30:58]
      node io_out_hi = mux(_ex_t_T, _ex_t_T_1, _ex_t_T_2) @[And.scala 52:22]
      node _io_out_T = cat(io_out_hi, io_out_lo) @[Cat.scala 30:58]
      io.out <= _io_out_T @[And.scala 53:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_1 = eq(UInt<6>("h023"), io.opcod) @[Conditional.scala 37:30]
      when _T_1 : @[Conditional.scala 39:67]
        node out3_lo = bits(io.extender, 11, 7) @[And.scala 56:31]
        node out3_hi = bits(io.extender, 31, 25) @[And.scala 57:31]
        node _ex_t_T_3 = bits(io.extender, 31, 31) @[And.scala 58:34]
        node ex_t_lo_2 = bits(io.extender, 31, 31) @[And.scala 58:59]
        node _ex_t_T_4 = cat(UInt<19>("h07ffff"), ex_t_lo_2) @[Cat.scala 30:58]
        node ex_t_lo_3 = bits(io.extender, 31, 31) @[And.scala 58:85]
        node _ex_t_T_5 = cat(UInt<1>("h00"), ex_t_lo_3) @[Cat.scala 30:58]
        node io_out_hi_1 = mux(_ex_t_T_3, _ex_t_T_4, _ex_t_T_5) @[And.scala 58:22]
        node io_out_lo_1 = cat(out3_hi, out3_lo) @[Cat.scala 30:58]
        node _io_out_T_1 = cat(io_out_hi_1, io_out_lo_1) @[Cat.scala 30:58]
        io.out <= _io_out_T_1 @[And.scala 60:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_2 = eq(UInt<7>("h063"), io.opcod) @[Conditional.scala 37:30]
        when _T_2 : @[Conditional.scala 39:67]
          node out1 = bits(io.extender, 7, 7) @[And.scala 63:31]
          node out4_hi = bits(io.extender, 11, 8) @[And.scala 64:31]
          node out4_lo = bits(io.extender, 30, 25) @[And.scala 65:31]
          node _ex_t_T_6 = bits(io.extender, 31, 31) @[And.scala 66:35]
          node ex_t_lo_4 = bits(io.extender, 31, 31) @[And.scala 66:60]
          node _ex_t_T_7 = cat(UInt<19>("h07ffff"), ex_t_lo_4) @[Cat.scala 30:58]
          node ex_t_lo_5 = bits(io.extender, 31, 31) @[And.scala 66:86]
          node _ex_t_T_8 = cat(UInt<1>("h00"), ex_t_lo_5) @[Cat.scala 30:58]
          node out4_hi_1 = mux(_ex_t_T_6, _ex_t_T_7, _ex_t_T_8) @[And.scala 66:23]
          node out4_hi_2 = cat(out4_hi_1, out4_lo) @[Cat.scala 30:58]
          node out4_lo_1 = cat(out4_hi, UInt<1>("h00")) @[Cat.scala 30:58]
          node out4 = cat(out4_hi_2, out4_lo_1) @[Cat.scala 30:58]
          io.out <= out4 @[And.scala 68:16]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_3 = eq(UInt<7>("h067"), io.opcod) @[Conditional.scala 37:30]
          when _T_3 : @[Conditional.scala 39:67]
            node out5_hi = bits(io.extender, 19, 12) @[And.scala 73:31]
            node out5_lo = bits(io.extender, 20, 20) @[And.scala 74:31]
            node out5_lo_1 = bits(io.extender, 21, 21) @[And.scala 75:31]
            node out5_hi_1 = bits(io.extender, 30, 22) @[And.scala 76:31]
            node _ex_t_T_9 = bits(io.extender, 31, 31) @[And.scala 77:35]
            node ex_t_lo_6 = bits(io.extender, 31, 31) @[And.scala 77:60]
            node _ex_t_T_10 = cat(UInt<19>("h07ffff"), ex_t_lo_6) @[Cat.scala 30:58]
            node ex_t_lo_7 = bits(io.extender, 31, 31) @[And.scala 77:86]
            node _ex_t_T_11 = cat(UInt<1>("h00"), ex_t_lo_7) @[Cat.scala 30:58]
            node out5_hi_2 = mux(_ex_t_T_9, _ex_t_T_10, _ex_t_T_11) @[And.scala 77:23]
            node out5_hi_3 = cat(out5_hi, out5_lo) @[Cat.scala 30:58]
            node out5_lo_2 = cat(out5_hi_1, out5_lo_1) @[Cat.scala 30:58]
            node out5_lo_3 = cat(out5_hi_3, out5_lo_2) @[Cat.scala 30:58]
            node out5_hi_4 = cat(out5_hi_2, out5_lo_3) @[Cat.scala 30:58]
            node out5 = cat(out5_hi_4, UInt<1>("h00")) @[Cat.scala 30:58]
            io.out <= out5 @[And.scala 80:16]
            skip @[Conditional.scala 39:67]
    
