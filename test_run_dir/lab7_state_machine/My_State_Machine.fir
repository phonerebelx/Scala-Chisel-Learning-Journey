;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit My_State_Machine : 
  module My_State_Machine : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip f1 : UInt<1>, flip f2 : UInt<1>, flip r1 : UInt<1>, flip r2 : UInt<1>, out : UInt<8>}
    
    reg state : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Task1.scala 17:21]
    io.out <= UInt<1>("h00") @[Task1.scala 18:8]
    node _T = eq(UInt<3>("h00"), state) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      node _T_1 = eq(io.f1, UInt<1>("h00")) @[Task1.scala 21:15]
      node _T_2 = eq(io.f2, UInt<1>("h00")) @[Task1.scala 21:24]
      node _T_3 = and(_T_1, _T_2) @[Task1.scala 21:22]
      when _T_3 : @[Task1.scala 21:31]
        state <= UInt<3>("h00") @[Task1.scala 22:19]
        skip @[Task1.scala 21:31]
      else : @[Task1.scala 24:25]
        when io.f1 : @[Task1.scala 24:25]
          state <= UInt<3>("h01") @[Task1.scala 25:18]
          skip @[Task1.scala 24:25]
        else : @[Task1.scala 27:19]
          state <= UInt<3>("h05") @[Task1.scala 28:18]
          skip @[Task1.scala 27:19]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = eq(UInt<3>("h01"), state) @[Conditional.scala 37:30]
      when _T_4 : @[Conditional.scala 39:67]
        node _T_5 = eq(io.r1, UInt<1>("h00")) @[Task1.scala 33:14]
        node _T_6 = eq(io.f1, UInt<1>("h00")) @[Task1.scala 33:23]
        node _T_7 = and(_T_5, _T_6) @[Task1.scala 33:21]
        when _T_7 : @[Task1.scala 33:30]
          state <= UInt<3>("h01") @[Task1.scala 34:19]
          skip @[Task1.scala 33:30]
        else : @[Task1.scala 36:25]
          when io.r1 : @[Task1.scala 36:25]
            state <= UInt<3>("h00") @[Task1.scala 37:19]
            skip @[Task1.scala 36:25]
          else : @[Task1.scala 39:19]
            state <= UInt<3>("h02") @[Task1.scala 40:19]
            skip @[Task1.scala 39:19]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_8 = eq(UInt<3>("h02"), state) @[Conditional.scala 37:30]
        when _T_8 : @[Conditional.scala 39:67]
          node _T_9 = eq(io.r1, UInt<1>("h00")) @[Task1.scala 44:14]
          node _T_10 = eq(io.f1, UInt<1>("h00")) @[Task1.scala 44:23]
          node _T_11 = and(_T_9, _T_10) @[Task1.scala 44:21]
          when _T_11 : @[Task1.scala 44:30]
            state <= UInt<3>("h02") @[Task1.scala 45:19]
            io.out <= UInt<2>("h03") @[Task1.scala 46:20]
            skip @[Task1.scala 44:30]
          else : @[Task1.scala 48:25]
            when io.r1 : @[Task1.scala 48:25]
              state <= UInt<3>("h01") @[Task1.scala 49:19]
              io.out <= UInt<2>("h03") @[Task1.scala 50:20]
              skip @[Task1.scala 48:25]
            else : @[Task1.scala 52:20]
              state <= UInt<3>("h03") @[Task1.scala 53:19]
              io.out <= UInt<2>("h03") @[Task1.scala 54:20]
              skip @[Task1.scala 52:20]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_12 = eq(UInt<3>("h03"), state) @[Conditional.scala 37:30]
          when _T_12 : @[Conditional.scala 39:67]
            state <= UInt<3>("h00") @[Task1.scala 59:15]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_13 = eq(UInt<3>("h04"), state) @[Conditional.scala 37:30]
            when _T_13 : @[Conditional.scala 39:67]
              node _T_14 = eq(io.r2, UInt<1>("h00")) @[Task1.scala 62:14]
              node _T_15 = eq(io.f2, UInt<1>("h00")) @[Task1.scala 62:23]
              node _T_16 = and(_T_14, _T_15) @[Task1.scala 62:21]
              when _T_16 : @[Task1.scala 62:30]
                state <= UInt<3>("h04") @[Task1.scala 63:19]
                io.out <= UInt<3>("h07") @[Task1.scala 64:20]
                skip @[Task1.scala 62:30]
              else : @[Task1.scala 65:26]
                when io.r2 : @[Task1.scala 65:26]
                  state <= UInt<3>("h05") @[Task1.scala 66:19]
                  io.out <= UInt<3>("h07") @[Task1.scala 67:20]
                  skip @[Task1.scala 65:26]
                else : @[Task1.scala 68:20]
                  state <= UInt<3>("h03") @[Task1.scala 69:19]
                  io.out <= UInt<3>("h07") @[Task1.scala 70:20]
                  skip @[Task1.scala 68:20]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_17 = eq(UInt<3>("h05"), state) @[Conditional.scala 37:30]
              when _T_17 : @[Conditional.scala 39:67]
                node _T_18 = eq(io.r2, UInt<1>("h00")) @[Task1.scala 73:14]
                node _T_19 = eq(io.f2, UInt<1>("h00")) @[Task1.scala 73:23]
                node _T_20 = and(_T_18, _T_19) @[Task1.scala 73:21]
                when _T_20 : @[Task1.scala 73:30]
                  state <= UInt<3>("h05") @[Task1.scala 74:19]
                  skip @[Task1.scala 73:30]
                else : @[Task1.scala 75:26]
                  when io.f2 : @[Task1.scala 75:26]
                    state <= UInt<3>("h04") @[Task1.scala 76:18]
                    skip @[Task1.scala 75:26]
                  else : @[Task1.scala 78:26]
                    when io.r2 : @[Task1.scala 78:26]
                      state <= UInt<3>("h04") @[Task1.scala 79:18]
                      skip @[Task1.scala 78:26]
                skip @[Conditional.scala 39:67]
    
