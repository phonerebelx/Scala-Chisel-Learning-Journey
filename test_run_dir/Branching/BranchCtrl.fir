;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit BranchCtrl : 
  module BranchCtrl : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip sel : UInt<5>, flip branch : UInt<1>, flip a : SInt<32>, flip b : SInt<32>, out : SInt<32>, br_taken : UInt<1>}
    
    io.out <= asSInt(UInt<1>("h00")) @[branch.scala 24:12]
    node _T = eq(UInt<5>("h010"), io.sel) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      node _T_1 = eq(io.a, io.b) @[branch.scala 28:23]
      when _T_1 : @[branch.scala 28:32]
        io.out <= asSInt(UInt<2>("h01")) @[branch.scala 29:23]
        skip @[branch.scala 28:32]
      else : @[branch.scala 30:24]
        io.out <= asSInt(UInt<1>("h00")) @[branch.scala 31:23]
        skip @[branch.scala 30:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_2 = eq(UInt<5>("h011"), io.sel) @[Conditional.scala 37:30]
      when _T_2 : @[Conditional.scala 39:67]
        node _T_3 = neq(io.a, io.b) @[branch.scala 36:23]
        when _T_3 : @[branch.scala 36:32]
          io.out <= asSInt(UInt<2>("h01")) @[branch.scala 37:23]
          skip @[branch.scala 36:32]
        else : @[branch.scala 38:24]
          io.out <= asSInt(UInt<1>("h00")) @[branch.scala 39:23]
          skip @[branch.scala 38:24]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_4 = eq(UInt<5>("h014"), io.sel) @[Conditional.scala 37:30]
        when _T_4 : @[Conditional.scala 39:67]
          node _T_5 = lt(io.a, io.b) @[branch.scala 44:23]
          when _T_5 : @[branch.scala 44:30]
            io.out <= asSInt(UInt<2>("h01")) @[branch.scala 45:23]
            skip @[branch.scala 44:30]
          else : @[branch.scala 46:24]
            io.out <= asSInt(UInt<1>("h00")) @[branch.scala 47:23]
            skip @[branch.scala 46:24]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_6 = eq(UInt<5>("h015"), io.sel) @[Conditional.scala 37:30]
          when _T_6 : @[Conditional.scala 39:67]
            node _T_7 = geq(io.a, io.b) @[branch.scala 52:23]
            when _T_7 : @[branch.scala 52:31]
              io.out <= asSInt(UInt<2>("h01")) @[branch.scala 53:23]
              skip @[branch.scala 52:31]
            else : @[branch.scala 54:24]
              io.out <= asSInt(UInt<1>("h00")) @[branch.scala 55:23]
              skip @[branch.scala 54:24]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_8 = eq(UInt<5>("h016"), io.sel) @[Conditional.scala 37:30]
            when _T_8 : @[Conditional.scala 39:67]
              node _T_9 = asUInt(io.a) @[branch.scala 60:23]
              node _T_10 = asUInt(io.b) @[branch.scala 60:37]
              node _T_11 = lt(_T_9, _T_10) @[branch.scala 60:30]
              when _T_11 : @[branch.scala 60:44]
                io.out <= asSInt(UInt<2>("h01")) @[branch.scala 61:23]
                skip @[branch.scala 60:44]
              else : @[branch.scala 62:24]
                io.out <= asSInt(UInt<1>("h00")) @[branch.scala 63:23]
                skip @[branch.scala 62:24]
              skip @[Conditional.scala 39:67]
    node _T_12 = eq(io.out, asSInt(UInt<2>("h01"))) @[branch.scala 68:18]
    node _T_13 = bits(io.sel, 4, 3) @[branch.scala 68:34]
    node _T_14 = eq(_T_13, UInt<2>("h02")) @[branch.scala 68:40]
    node _T_15 = and(_T_12, _T_14) @[branch.scala 68:26]
    node _T_16 = eq(io.branch, UInt<1>("h01")) @[branch.scala 68:64]
    node _T_17 = and(_T_15, _T_16) @[branch.scala 68:52]
    when _T_17 : @[branch.scala 68:72]
      io.br_taken <= UInt<1>("h01") @[branch.scala 69:21]
      skip @[branch.scala 68:72]
    else : @[branch.scala 70:16]
      io.br_taken <= UInt<1>("h00") @[branch.scala 71:21]
      skip @[branch.scala 70:16]
    
